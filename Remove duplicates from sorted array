Solution 1:- TC-O(N*logN)
SC - O(N)

#include<bits/stdc++.h>

int removeDuplicates(vector<int> &arr, int n) {
	map<int,int>mp;
	for(int i = 0; i < n; i++)
	{
		if(mp.find(arr[i]) != mp.end())
		{
			mp[arr[i]]++;
		}
		else
		mp.insert({arr[i],1});
	}
	return mp.size();
}

Solution 2:- TC - O(N*logN)
SC - O(N)
#include<bits/stdc++.h>

int removeDuplicates(vector<int> &arr, int n) {
	set<int>st(arr.begin(),arr.end());
	return st.size();
}

Solution 3:- TC - O(N) SC - O(1)
#include<bits/stdc++.h>

int removeDuplicates(vector<int> &arr, int n) {
    int i = 0;
    int j = 1;
    while(j < n)
    {
        if(arr[i] != arr[j])
        {
            i++;
        }
        arr[i] = arr[j];
        j++;
    }
    return i+1;
}
