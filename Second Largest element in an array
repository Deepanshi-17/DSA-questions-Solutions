1st Solution - (Sorting) O(NlogN)
vector<int> getSecondOrderElements(int n, vector<int> a) {
    sort(a.begin(),a.end());
    return {a[n-2],a[1]};
}


2nd Solution - O(N) + O(N) ~ O(N)
1. First find largest and smallest
2. then again find iterate the array and find secondlargest and secondsmallest by adding a condition that array element not equal to largest and smallest.
vector<int> getSecondOrderElements(int n, vector<int> a) {
    int maxi = INT_MIN;
    int mini = INT_MAX;
    for(int i = 0; i < n; i++)
    {
        maxi = max(maxi,a[i]);
        mini = min(mini,a[i]);
    }
    int secondMaxi = INT_MIN;
    int secondMini = INT_MAX;
    for(int i = 0; i < n; i++)
    {
        if(a[i] != maxi)
        secondMaxi = max(secondMaxi,a[i]);
        if(a[i] != mini)
        secondMini = min(secondMini,a[i]);
    }
    return {secondMaxi, secondMini};
}
