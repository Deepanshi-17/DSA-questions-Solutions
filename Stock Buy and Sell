Soltuion 1 TC - O(N^2) SC - O(1)
#include<bits/stdc++.h>

int bestTimeToBuyAndSellStock(vector<int>&prices) {
    int maxi = 0;
    int n = prices.size();
    for(int i = 0; i < n; i++)
    {
        for(int j = i+1; j < n; j++)
        {
            if(prices[j] > prices[i])
            {
                maxi = max(maxi, abs(prices[i]-prices[j]));
            }
        }
    }
    return maxi;
}
Solution 2 TC- O(N) SC - O(1)
int bestTimeToBuyAndSellStock(vector<int>&prices) {
    long long mini = prices[0];
    long long maxi = 0;
    for(int i = 0; i < prices.size(); i++)
    {
        if(prices[i] > mini)
        {
            maxi = max(maxi, prices[i]-mini);
        }
        if(prices[i] < mini)
        {
            mini = prices[i];
        }
    }
    return maxi;
}
