Solution 1 - TC - O(N)+O(N)+O(N) ~ O(3*N) SC - O(1)

vector<int> nextGreaterPermutation(vector<int> &A) {
    int breakpoint = -1;
    for(int i = A.size()-2; i >= 0 ; i--)
    {
        if(A[i] < A[i+1])
        {
            breakpoint = i;
            break;
        }
    }
    if(breakpoint == -1)
    {
        reverse(A.begin(),A.end());
        return A;
    }

    for(int i = A.size()-1; i > breakpoint; i--)
    {
        if(A[i] > A[breakpoint])
        {
            swap(A[i], A[breakpoint]);
            break;
        }
    }
    reverse(A.begin() + breakpoint + 1, A.end());
    return A;
}

Solution 2 - TC - O(N) SC - O(1)
#include<bits/stdc++.h>

vector<int> nextGreaterPermutation(vector<int> &A) {
    // Write your code here.
    next_permutation(A.begin(),A.end());
    return A;
}
