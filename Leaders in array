Solution 1 TC- O(N^2) + O(NlogN) SC - O(1)
vector<int> superiorElements(vector<int>&a) {
    vector<int>ans;
    for(int i = 0; i < a.size()-1; i++)
    {
        bool flag = false;
        for(int j = i+1; j < a.size(); j++)
        {
            if(a[i] <= a[j])
            {
                flag = true;
            }
        }
        if(!flag) ans.push_back(a[i]);
    }
    ans.push_back(a[a.size()-1]);
    sort(ans.begin(),ans.end());
    return ans;
}

Solution 2 - TC - O(N) SC - O(1)
vector<int> superiorElements(vector<int> &a) {
  vector<int> leaders;
  int maxi = INT_MIN;
  vector<int>ans;
  for (int i = a.size() - 1; i >= 0; i--)
  {
      if(a[i] > maxi)
      {
          maxi = a[i];
          ans.push_back(a[i]);
      }
  }
  return ans;
}
